[project]
name = "arbor"
version = "0.8.2-dev" # TODO: make dependent on VERSION file. Blocked by https://github.com/scikit-build/scikit-build-core/issues/230
readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE"}
description = "High performance simulation of networks of multicompartment neurons."
requires-python = ">=3.7"
keywords = ["simulator", "neuroscience", "morphological detail", "HPC", "GPU", "C++"]
authors = [
    {name = "Arbor Dev Team", email = "contact@arbor-sim.org"}
]
maintainers = [
    {name = "Arbor Dev Team", email = "contact@arbor-sim.org"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: C++"
]
dependencies = [
    "numpy"
]

[project.scripts]
modcc = "arbor:modcc"
arbor-build-catalogue = "arbor:build_catalogue"

[tool.scikit-build]
cmake.args = [
        "-DARB_WITH_PYTHON=ON",
        "-DARB_USE_BUNDLED_LIBS=ON",
]
wheel.install-dir = "arbor"
wheel.packages = []

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude='^/(ext|doc/scripts/.*_theme|doc/scripts/inputs.py)'

[project.urls]
homepage = "https://arbor-sim.org"
documentation = "https://docs.arbor-sim.org"
repository = "https://github.com/arbor-sim/arbor"
changelog = "https://github.com/arbor-sim/arbor/releases"

[build-system]
requires = [
    "scikit-build-core",
]
build-backend = "scikit_build_core.build"


[tool.cibuildwheel]
build-frontend = "build"
build = ["cp3*-*linux*","cp3*-macosx*"]
skip = ["cp36*", "pp*", "*musllinux*"]
test-command = "python -m unittest discover -v -s {project}/python"
before-build = "python -m pip install pip --upgrade"
before-test = "python -m pip install pip --upgrade"

[tool.cibuildwheel.macos]
archs = ["universal2"]
# before-all = ["export CC=$(brew --prefix llvm@15)/bin/clang", "export CXX=$(brew --prefix llvm@15)/bin/clang++"]

[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.15"

[tool.cibuildwheel.linux]
archs = ["x86_64"]
manylinux-x86_64-image = "manylinux2014"
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel} && python /project/scripts/patchwheel.py {dest_dir}"

[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
#TBD
