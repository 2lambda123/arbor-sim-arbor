include:
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.cscs.yml'

stages:
  - build
  - allocate
  - test
  - upload_reports
  - cleanup

# Builds a docker image on kubernetes
.build_docker_images:
  extends: .dind
  stage: build
  only: ['master', 'staging', 'trying']
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - docker login -u $CSCS_REGISTRY_USER -p $CSCS_REGISTRY_PASSWORD $CSCS_REGISTRY
    - docker build -f $BUILD_DOCKERFILE --network=host --cache-from $BUILD_IMAGE --build-arg BUILDKIT_INLINE_CACHE=1 -t $BUILD_IMAGE .
    - docker push $BUILD_IMAGE
    - docker build -f $DEPLOY_DOCKERFILE --network=host --build-arg BUILD_ENV=$BUILD_IMAGE -t $DEPLOY_IMAGE .
    - docker push $DEPLOY_IMAGE

build release:
  extends: .build_docker_images
  variables:
    BUILD_DOCKERFILE: ci/release/build.Dockerfile
    BUILD_IMAGE: $CSCS_REGISTRY_IMAGE/release/build:latest
    DEPLOY_DOCKERFILE: ci/release/deploy.Dockerfile
    DEPLOY_IMAGE: $CSCS_REGISTRY_IMAGE/release/deploy:$CI_COMMIT_SHA

notify_github_start:
  stage: build
  allow_failure: true
  only: ['master', 'staging', 'trying']
  tags: ['kubernetes']
  image: stabbles/git-curl
  script: ./ci/set_github_status.sh pending


# Some variables used for running on daint
variables:
  CRAY_CUDA_MPS: 1
  USE_MPI: 'YES'
  DISABLE_AFTER_SCRIPT: 'YES'
  PULL_IMAGE: 'NO'
  SLURM_CONSTRAINT: gpu
  SLURM_JOB_NUM_NODES: 2
  SLURM_PARTITION: normal
  SLURM_TIMELIMIT: '15:00'
  SLURM_EXCLUSIVE: '' # make sure resources are not shared

### Release tests ###
allocate release:
  stage: allocate
  image: $CSCS_REGISTRY_IMAGE/release/deploy:$CI_COMMIT_SHA
  only: ['master', 'staging', 'trying']
  extends: .daint_alloc
  variables:
    PULL_IMAGE: 'YES'
    ALLOCATION_NAME: arbor-ci-release-$CI_PIPELINE_ID

single node release:
  extends: .daint
  image: $CSCS_REGISTRY_IMAGE/release/deploy:$CI_COMMIT_SHA
  only: ['master', 'staging', 'trying']
  stage: test
  script:
    - unit
    - unit-local
    - unit-modcc
  variables:
    SLURM_JOB_NUM_NODES: 1
    SLURM_NTASKS: 1
    ALLOCATION_NAME: arbor-ci-release-$CI_PIPELINE_ID

multi node release:
  extends: .daint
  image: $CSCS_REGISTRY_IMAGE/release/deploy:$CI_COMMIT_SHA
  only: ['master', 'staging', 'trying']
  stage: test
  script:
    - unit-mpi
  variables:
    SLURM_JOB_NUM_NODES: 2
    SLURM_NTASKS: 2
    ALLOCATION_NAME: arbor-ci-release-$CI_PIPELINE_ID

test-ault-fujitsu:
    tags:
        - arm-a64fx
    stage: test
    script:
        - chmod +x ci/test-ault-fujitsu.sh
        - srun --partition=a64fx -c48 ci/test-ault-fujitsu.sh "$(pwd)"

deallocate release:
  only: ['master', 'staging', 'trying']
  image: $CSCS_REGISTRY_IMAGE/release/deploy:$CI_COMMIT_SHA
  stage: cleanup
  extends: .daint_dealloc
  variables:
    ALLOCATION_NAME: arbor-ci-release-$CI_PIPELINE_ID

notify_github_success:
  stage: cleanup
  when: on_success
  only: ['master', 'staging', 'trying']
  tags: ['kubernetes']
  image: stabbles/git-curl
  script: ./ci/set_github_status.sh success

notify_github_failure:
  stage: cleanup
  when: on_failure
  only: ['master', 'staging', 'trying']
  tags: ['kubernetes']
  image: stabbles/git-curl
  script: ./ci/set_github_status.sh failure
