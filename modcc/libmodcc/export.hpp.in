#pragma once

//#ifndef ARB_EXPORT_DEBUG
//#   define ARB_EXPORT_DEBUG
//#endif

/* library build type (ARB_@target_short_NAME@_STATIC_LIBRARY/ARB_@target_short_NAME@_SHARED_LIBRARY) */
#define ARB_@target_short_NAME@_@target_type@

#pragma once

#if defined(__INTEL_COMPILER) || defined(__ICL) || defined(__ICC) || defined(__ECC)
//  Intel
#   if defined(_WIN32) || defined(__WIN32__) || defined(WIN32) || defined(__CYGWIN__)
#       define ARB_SYMBOL_IMPORT __attribute__((__dllimport__))
#       define ARB_SYMBOL_EXPORT __attribute__((__dllexport__))
#   elif defined(__GNUC__) && (__GNUC__ >= 4)
#       define ARB_SYMBOL_EXPORT __attribute__((visibility("default")))
#       define ARB_SYMBOL_VISIBLE __attribute__((__visibility__("default")))
#   endif

#elif defined(__clang__)
//  Clang C++
#   if defined(_WIN32) || defined(__WIN32__) || defined(WIN32) || defined(__CYGWIN__)
#       define ARB_SYMBOL_IMPORT __attribute__((__dllimport__))
#       define ARB_SYMBOL_EXPORT __attribute__((__dllexport__))
#   else
#       define ARB_SYMBOL_EXPORT __attribute__((__visibility__("default")))
#       define ARB_SYMBOL_VISIBLE __attribute__((__visibility__("default")))
#   endif

# elif defined(__GNUC__)
//  GNU C++:
#   if __GNUC__ >= 4
#       if defined(_WIN32) || defined(__WIN32__) || defined(WIN32) || defined(__CYGWIN__)
#           define ARB_SYMBOL_IMPORT __attribute__((__dllimport__))
#           define ARB_SYMBOL_EXPORT __attribute__((__dllexport__))
#       else
#           define ARB_SYMBOL_EXPORT __attribute__((__visibility__("default")))
#           define ARB_SYMBOL_VISIBLE __attribute__((__visibility__("default")))
#       endif
#   endif

#endif

#if defined(macintosh) || defined(__APPLE__) || defined(__APPLE_CC__)
// MacOS
#   define ARB_ON_MACOS
#endif

#ifndef ARB_SYMBOL_IMPORT
#   define ARB_SYMBOL_IMPORT
#endif
#ifndef ARB_SYMBOL_EXPORT
#   define ARB_SYMBOL_EXPORT
#endif
#ifndef ARB_SYMBOL_VISIBLE
#   define ARB_SYMBOL_VISIBLE
#endif

#ifndef ARB_@target_short_NAME@_EXPORTS
#   if defined(@target_name@_EXPORTS)
        /* we are building @target@ dynamically */
#       ifdef ARB_EXPORT_DEBUG
#           pragma message "we are building @target@ dynamically"
#       endif
#       define ARB_@target_short_NAME@_API ARB_SYMBOL_EXPORT
#   elif defined(@target_name@_EXPORTS_STATIC)
        /* we are building @target@ statically */
#       ifdef ARB_EXPORT_DEBUG
#           pragma message "we are building @target@ statically"
#       endif
#       define ARB_@target_short_NAME@_API
#   else
        /* we are using the library @target@ */
#       if defined(ARB_@target_short_NAME@_SHARED_LIBRARY)
            /* we are importing @target@ dynamically */
#           ifdef ARB_EXPORT_DEBUG
#              pragma message "we are importing @target@ dynamically"
#           endif
#           define ARB_@target_short_NAME@_API ARB_SYMBOL_IMPORT
#       else
            /* we are importing @target@ statically */
#           ifdef ARB_EXPORT_DEBUG
#               pragma message "we are importing @target@ statically"
#           endif
#           define ARB_@target_short_NAME@_API
#       endif
#   endif
#endif
