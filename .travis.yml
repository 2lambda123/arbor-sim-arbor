language: cpp
sudo: false

matrix:
  include:
########################## OS X #########################
## test gcc6 - single node/rank with threading backend ##
    - os: osx
      osx_image: xcode9
      env:
        - MATRIX_EVAL="brew install gcc@6 && brew link --force --overwrite gcc@6 && CC=gcc-6 && CXX=g++-6"
        - BUILD_NAME=cthread WITH_DISTRIBUTED=serial
      compiler: gcc-6

## test gcc6 - mpi with threading backend ##
    - os: osx
      osx_image: xcode9
      env:
        - MATRIX_EVAL="brew install gcc@6 && brew link --force --overwrite gcc@6 && CC=gcc-6 && CXX=g++-6"
        - BUILD_NAME=mpi WITH_DISTRIBUTED=mpi
      compiler: gcc-6

## test clang - single node/rank with threading backend ##
    - os: osx
      osx_image: xcode9.4
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_NAME=cthread WITH_DISTRIBUTED=serial
      compiler: clang

## test clang - single node/rank with threading backend ##
    - os: osx 
      osx_image: xcode9.3
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_NAME=cthread WITH_DISTRIBUTED=serial
      compiler: clang

## test clang - single node/rank with threading backend ##
    - os: osx 
      osx_image: xcode9.2
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_NAME=cthread WITH_DISTRIBUTED=serial
      compiler: clang


## test clang - single node/rank with threading backend ##
    - os: osx 
      osx_image: xcode9.1
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_NAME=cthread WITH_DISTRIBUTED=serial
      compiler: clang

## test clang - mpi with threading backend ##
    - os: osx
      osx_image: xcode9.4
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - BUILD_NAME=mpi WITH_DISTRIBUTED=mpi
      compiler: clang

######################### LINUX #########################
## test gcc6 - single node/rank with threading backend ##
    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - openmpi-bin
            - libopenmpi-dev
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - BUILD_NAME=cthread WITH_DISTRIBUTED=serial
      compiler: gcc-6

## test gcc6 - mpi with threading backend ##
    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - openmpi-bin
            - libopenmpi-dev
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - BUILD_NAME=mpi WITH_DISTRIBUTED=mpi
      compiler: gcc-6

## test clang - single node/rank with threading backend ##
    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - g++-6
            - openmpi-bin
            - libopenmpi-dev
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
        - BUILD_NAME=cthread WITH_DISTRIBUTED=serial
      compiler: clang-4.0

## test clang - mpi with threading backend ##
    - os: linux
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - g++-6
            - openmpi-bin
            - libopenmpi-dev
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
        - BUILD_NAME=mpi WITH_DISTRIBUTED=mpi
      compiler: clang-4.0

before_script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export HOMEBREW_NO_AUTO_UPDATE=1; brew cask uninstall --force oclint; fi
  - if [[ ( "$TRAVIS_OS_NAME" == "osx" ) && ( "$WITH_DISTRIBUTED" == "mpi" ) ]]; then brew install open-mpi; fi
  - eval "${MATRIX_EVAL}"

script: source ./scripts/travis/build.sh

notifications:
  email:
    recipients:
      - a.kuesters@fz-juelich.de
    on_success: never
    on_failure: always
