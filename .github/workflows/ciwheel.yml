name: Arbor on Wheels

on:
  push:
    branches: [ master, ciwheel ]
    tags:
      - v*

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name:  "Linux Max GCC",
            os:    "ubuntu-20.04",
            cc:    "gcc-10",
            cxx:   "g++-10",
            py:    "3.9",
            cmake: "3.19.x",
            mpi:   "ON",
            simd:  "OFF"
          }
        - {
            name:  "MacOS Max",
            os:    "macos-10.15", # TODO: 11.0 is still private preview, fix later.
            cc:    "clang",
            cxx:   "clang++",
            py:    "3.9",
            cmake: "3.19.x",
            mpi:   "ON",
            simd:  "OFF"
          }

    env:
        CC:         ${{ matrix.config.cc }}
        CXX:        ${{ matrix.config.cxx }}

    steps:
      ## system setup
      - name: Set up Python
        uses: actions/setup-python@v2

      ## get arbor
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      ##cibuildwheel setup
      - name: Build wheels Linux
        if: ${{ startsWith(matrix.config.os, 'ubuntu') }}
        uses: joerick/cibuildwheel@v1.9.0
        with:
          output-dir: dist
        env:
          CIBW_BEFORE_BUILD: python -m pip install numpy setuptools
          CIBW_BUILD: "cp3?-manylinux_x86_64"
          CIBW_SKIP: "cp35-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014

      - name: Build wheels macos
        if: ${{ startsWith(matrix.config.os, 'macos') }}
        uses: joerick/cibuildwheel@v1.9.0
        with:
          output-dir: dist
        env:
          CIBW_BEFORE_BUILD: python -m pip install numpy setuptools
          CIBW_BUILD: "cp3?-macosx_x86_64"
          CIBW_SKIP: "cp35-*"

      - name: auditwheel
        run: |
          pip install auditwheel
          for whl in ./dist/*.whl; do
              auditwheel repair "$whl"
          done

      - uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.whl

  upload:
    name: upload to pypi
    runs-on: "ubuntu-20.04"
    depends-on: "build_wheels"
      - uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: path/to/artifact

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: path/to/artifact
      - name: Publish distribution ðŸ“¦ to Test PyPI
        if: github.ref == 'refs/heads/master'
        run: |
          pip install twine
          twine upload -r testpypi wheelhouse/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.ciwheeltest }}