name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: "Build & Test"
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name: "Ubuntu XX GCC X",
            os:   "ubuntu-20.04",
            cc:   "gcc-10",
            cxx:  "g++-10"
          }
        - {
            name: "Ubuntu XX GCC IX",
            os:   "ubuntu-20.04",
            cc:   "gcc-9",
            cxx:  "g++-9"
          }
        - {
            name: "Ubuntu XX LLVM X",
            os:   "ubuntu-20.04",
            cc:   "clang-10",
            cxx:  "clang++-10"
          }
        - {
            name: "Ubuntu XX LLVM IX",
            os:   "ubuntu-20.04",
            cc:   "clang-9",
            cxx:  "clang++-9"
          }
        - {
            name: "Ubuntu XX GCC VII",
            os:   "ubuntu-20.04",
            cc:   "gcc-8",
            cxx:  "g++-8"
          }
        - {
            name: "Ubuntu XVIII GCC IX",
            os:   "ubuntu-18.04",
            cc:   "gcc-9",
            cxx:  "g++-9"
          }
        - {
            name: "Ubuntu XVIII LLVM VII",
            os:   "ubuntu-18.04",
            cc:   "gcc-8",
            cxx:  "g++-8"
          }
        - {
            name: "MacOS X.XV GCC VII",
            os:   "macos-10.15",
            cc:   "gcc-8",
            cxx:  "g++-8"
          }
        - {
            name: "MacOS X.XV GCC IX",
            os:   "macos-10.15",
            cc:   "gcc-9",
            cxx:  "g++-9"
          }
        - {
            name: "MacOS X.XV LLVM XI",
            os:   "macos-10.15",
            cc:   "clang",
            cxx:  "clang++"
          }
    steps:
      - name: "Clone w/ submodules"
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Configure
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} -DARB_WITH_PYTHON=ON
      - name: Build
        run: make -C build tests examples
      - name: "Run unit tests"
        run: build/bin/unit
