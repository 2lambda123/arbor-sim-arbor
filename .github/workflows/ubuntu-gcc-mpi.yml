name: Ubuntu + GCC + MPI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: "Build & Test"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:    ["ubuntu-20.04"]
        gcc:   ["8", "10"]
        py:    ["3.6", "3.9"]
        cmake: ["3.12.x", "3.18.x"]
    steps:
      - name: "Clone w/ submodules"
        uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.4
        with:
          cmake-version: ${{ matrix.cmake }}
      - name: Install OpenMPI
        run: |
           export CC=gcc-${{ matrix.gcc }}
           export CXX=g++-${{ matrix.gcc }}
           wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.2.tar.gz
           tar -xvf ./openmpi-4.0.2.tar.gz
           cd openmpi-4.0.2
           ./configure
           make -j
           sudo make install
           sudo ldconfig
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}
      - name: "Install python packages"
        run: python${{ matrix.py }} -mpip install mpi4py
      - name: Configure
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=g++-${{ matrix.gcc }} -DCMAKE_C_COMPILER=gcc-${{ matrix.gcc }} -DARB_WITH_PYTHON=ON -DPYTHON_EXECUTABLE=`which python${{ matrix.py }}` -DARB_WITH_MPI=ON
      - name: Build
        run: make -C build tests examples
      - name: Install
        run: sudo make -C build install
      - name: "Run unit tests"
        run: build/bin/unit
      - name: "Run python tests"
        run: PYTHONPATH="/usr/local/lib/python${{ matrix.py }}/site-packages/:${PYTHONPATH}" python${{ matrix.py }} python/test/unit/runner.py
      - name: "Run python+MPI tests"
        run: PYTHONPATH="/usr/local/lib/python${{ matrix.py }}/site-packages/:${PYTHONPATH}" python${{ matrix.py }} python/test/unit_distributed/runner.py
